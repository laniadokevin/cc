@{
    ViewData["Title"] = "Bookings by Day";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">  
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                <div>
                    <h1 class="h2 mb-1 fw-bold text-success">
                        <i class="bi bi-calendar-week me-2"></i>Bookings by Day
                    </h1>
                    <p class="text-muted mb-0">See which days people book the most. Analyze by sport, city, rink size, facility, and month.</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary shadow-sm" onclick="exportData()">
                        <i class="bi bi-download me-2"></i>Export
                    </button>
                    <button class="btn btn-primary shadow-sm" onclick="loadData()">
                        <i class="bi bi-arrow-clockwise me-2"></i>Refresh
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom-0">
                    <h5 class="card-title mb-0 text-secondary">
                        <i class="bi bi-funnel me-2"></i>Filters
                    </h5>
                </div>
                <div class="card-body pb-2">
                    <div class="row g-3 mb-3">
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Sport</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="sportsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="sportsDropdownLabel">All Sports</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="sportsDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'sportsOptions',type:'sports',labelId:'sportsDropdownLabel',defaultLabel:'All Sports'})">
                                    <div id="sportsOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">City</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="citiesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="citiesDropdownLabel">All Cities</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="citiesDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'citiesOptions',type:'cities',labelId:'citiesDropdownLabel',defaultLabel:'All Cities'})">
                                    <div id="citiesOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Rink Size</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="rinkSizesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="rinkSizesDropdownLabel">All Sizes</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="rinkSizesDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'rinkSizesOptions',type:'rinkSizes',labelId:'rinkSizesDropdownLabel',defaultLabel:'All Sizes'})">
                                    <div id="rinkSizesOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Facility</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="facilitiesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="facilitiesDropdownLabel">All Facilities</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="facilitiesDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'facilitiesOptions',type:'facilities',labelId:'facilitiesDropdownLabel',defaultLabel:'All Facilities'})">
                                    <div id="facilitiesOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label fw-semibold">Month</label>
                            <select class="form-select" id="monthFilter">
                                <option value="">All Months</option>
                                <option value="1">January</option>
                                <option value="2">February</option>
                                <option value="3">March</option>
                                <option value="4">April</option>
                                <option value="5">May</option>
                                <option value="6">June</option>
                                <option value="7">July</option>
                                <option value="8">August</option>
                                <option value="9">September</option>
                                <option value="10">October</option>
                                <option value="11">November</option>
                                <option value="12">December</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Created Date (From)</label>
                            <input type="date" class="form-control" id="createdDateFrom">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Created Date (To)</label>
                            <input type="date" class="form-control" id="createdDateTo">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Happening Date (From)</label>
                            <input type="date" class="form-control" id="happeningDateFrom">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Happening Date (To)</label>
                            <input type="date" class="form-control" id="happeningDateTo">
                        </div>
                        <div class="col-md-2 d-flex align-items-end">
                            <div class="d-flex gap-1 w-100">
                                <button class="btn btn-primary px-4 shadow-sm w-50" onclick="applyFilters()">
                                    <i class="bi bi-funnel me-2"></i>Apply
                                </button>
                                <button class="btn btn-outline-secondary px-4 shadow-sm w-50" onclick="clearFilters()">
                                    <i class="bi bi-x-circle me-2"></i>Clear
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Section -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-white border-bottom-0">
                    <h5 class="card-title mb-0 text-success">
                        <i class="bi bi-calendar-week me-2"></i>Bookings by Day Results
                    </h5>
                </div>
                <div class="card-body">
                    <div id="loadingSpinner" class="text-center d-none py-5">
                        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3 text-primary">Loading data...</p>
                    </div>
                    <div id="errorMessage" class="alert alert-danger d-none" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <span id="errorText">An error occurred while loading data.</span>
                    </div>
                    <div id="dataContainer" class="d-none">
                        <!-- Summary Cards -->
                        <div class="row mb-4 g-3">
                            <div class="col-md-4">
                                <div class="card bg-gradient-success text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-clipboard-data display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="totalBookings">0</h2>
                                        <p class="mb-0">Total Bookings</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-gradient-primary text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-calendar2-week display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="busiestDay">-</h2>
                                        <p class="mb-0">Busiest Day</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-gradient-warning text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-calendar-x display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="quietestDay">-</h2>
                                        <p class="mb-0">Quietest Day</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Chart -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <div class="card border-0 bg-light shadow-sm">
                                    <div class="card-body">
                                        <div class="chart-container" style="height: 400px;">
                                            <canvas id="bookingsChart"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Data Table -->
                        <div class="table-responsive mb-3">
                            <table class="table table-hover align-middle rounded shadow-sm">
                                <thead class="table-light">
                                    <tr>
                                        <th>Day of Week</th>
                                        <th>Bookings Count</th>
                                        <th>Percentage</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody id="dataTableBody">
                                    <!-- Data will be populated here -->
                                </tbody>
                            </table>
                        </div>
                        <!-- Query History Table -->
                        <div class="table-responsive mb-3">
                            <h6 class="fw-bold mt-4 mb-2">
                                <i class="bi bi-clock-history me-2"></i>Query History
                                <button class="btn btn-sm btn-outline-danger ms-2" onclick="clearHistory()" title="Clear History">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </h6>
                            <table class="table table-sm table-bordered align-middle" id="historyTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Date/Time <span data-bs-toggle="tooltip" title="When this query was made."><i class="bi bi-info-circle"></i></span></th>
                                        <th>Filters <span data-bs-toggle="tooltip" title="Filters applied for this query."><i class="bi bi-info-circle"></i></span></th>
                                        <th>Busiest Day <span data-bs-toggle="tooltip" title="Day of the week with the highest number of bookings."><i class="bi bi-info-circle"></i></span></th>
                                        <th>Quietest Day <span data-bs-toggle="tooltip" title="Day of the week with the lowest number of bookings."><i class="bi bi-info-circle"></i></span></th>
                                        <th>Total Bookings <span data-bs-toggle="tooltip" title="Total bookings for this query."><i class="bi bi-info-circle"></i></span></th>
                                    </tr>
                                </thead>
                                <tbody id="historyTableBody">
                                    <!-- History rows go here -->
                                </tbody>
                            </table>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-3 small">
                            <div>
                                <span class="text-muted">Last updated: <span id="lastUpdated">Never</span></span>
                            </div>
                            <div>
                                <span class="text-muted">API Endpoint: <code>/api/Stats/GetBookingsByDay</code></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentData = null;
        let chart = null;
        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        let queryHistory = [];

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadData();
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.forEach(function (tooltipTriggerEl) {
                new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Load data from API
        async function loadData() {
            showLoading();
            hideError();
            
            try {
                const params = new URLSearchParams();
                const sports = getSelectedDropdownValues('sportsOptions');
                const cities = getSelectedDropdownValues('citiesOptions');
                const rinkSizes = getSelectedDropdownValues('rinkSizesOptions');
                const facilities = getSelectedDropdownValues('facilitiesOptions');
                const month = document.getElementById('monthFilter').value;
                
                if (sports.length) params.append('sport', sports.join(','));
                if (cities.length) params.append('city', cities.join(','));
                if (rinkSizes.length) params.append('rinkSize', rinkSizes.join(','));
                if (facilities.length) params.append('facility', facilities.join(','));
                if (month) params.append('month', month);
                
                // Fechas
                const createdFrom = document.getElementById('createdDateFrom').value;
                const createdTo = document.getElementById('createdDateTo').value;
                const happeningFrom = document.getElementById('happeningDateFrom').value;
                const happeningTo = document.getElementById('happeningDateTo').value;
                if (createdFrom) params.append('createdDateFrom', createdFrom);
                if (createdTo) params.append('createdDateTo', createdTo);
                if (happeningFrom) params.append('happeningDateFrom', happeningFrom);
                if (happeningTo) params.append('happeningDateTo', happeningTo);
                
                const url = `https://localhost:7254/api/Stats/GetBookingsByDay${params.toString() ? '?' + params.toString() : ''}`;
                const response = await fetch(url);
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                currentData = await response.json();
                
                displayData();
                updateLastUpdated();
                
            } catch (error) {
                console.error('Error loading data:', error);
                showError('Failed to load data: ' + error.message);
            } finally {
                hideLoading();
            }
        }

        // Display data
        function displayData() {
            if (!currentData) return;
            
            const labels = Object.keys(currentData);
            const values = Object.values(currentData);
            const totalBookings = values.reduce((sum, val) => sum + val, 0);
            
            // Find busiest and quietest days
            let maxIndex = 0, minIndex = 0;
            values.forEach((value, index) => {
                if (value > values[maxIndex]) maxIndex = index;
                if (value < values[minIndex]) minIndex = index;
            });
            
            // Update summary cards
            document.getElementById('totalBookings').textContent = totalBookings.toLocaleString();
            document.getElementById('busiestDay').textContent = dayNames[parseInt(labels[maxIndex])] || labels[maxIndex];
            document.getElementById('quietestDay').textContent = dayNames[parseInt(labels[minIndex])] || labels[minIndex];
            
            // Update data table
            const tbody = document.getElementById('dataTableBody');
            tbody.innerHTML = '';
            
            labels.forEach((label, index) => {
                const percentage = ((values[index] / totalBookings) * 100).toFixed(1);
                const dayName = dayNames[parseInt(label)] || label;
                const status = getDayStatus(percentage);
                const statusClass = status === 'High' ? 'text-success' : status === 'Medium' ? 'text-warning' : 'text-danger';
                
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${dayName}</td>
                    <td>${values[index].toLocaleString()}</td>
                    <td>${percentage}%</td>
                    <td><span class="${statusClass}">${status}</span></td>
                `;
                tbody.appendChild(row);
            });
            
            // Create chart
            createChart(labels, values);
            
            // Calculate most and least popular day
            const busiestDay = labels[maxIndex];
            const busiestPct = ((values[maxIndex] / totalBookings) * 100).toFixed(1);
            const quietestDay = labels[minIndex];
            const quietestPct = ((values[minIndex] / totalBookings) * 100).toFixed(1);
            // Agregar al historial
            addToHistory(getFiltersSummary(), busiestDay, busiestPct, quietestDay, quietestPct, totalBookings);
            
            document.getElementById('dataContainer').classList.remove('d-none');
        }

        // Create chart
        function createChart(labels, values) {
            const ctx = document.getElementById('bookingsChart');
            if (!ctx) return;
            
            if (chart) {
                chart.destroy();
            }
            
            const dayLabels = labels.map(label => dayNames[parseInt(label)] || label);
            
            chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: dayLabels,
                    datasets: [{
                        label: 'Bookings',
                        data: values,
                        backgroundColor: '#0d6efd',
                        borderColor: '#0d6efd',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Number of Bookings'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Day of Week'
                            }
                        }
                    }
                }
            });
        }

        // Get day status
        function getDayStatus(percentage) {
            const percent = parseFloat(percentage);
            if (percent >= 20) return 'High';
            if (percent >= 10) return 'Medium';
            return 'Low';
        }

        // Apply filters
        function applyFilters() {
            loadData();
        }

        // Clear filters
        function clearFilters() {
            ['sportsOptions','citiesOptions','rinkSizesOptions','facilitiesOptions'].forEach(id => {
                const container = document.getElementById(id);
                Array.from(container.querySelectorAll('input[type=checkbox]')).forEach(cb => cb.checked = false);
            });
            updateDropdownLabel('sportsOptions','All Sports','sportsDropdownLabel');
            updateDropdownLabel('citiesOptions','All Cities','citiesDropdownLabel');
            updateDropdownLabel('rinkSizesOptions','All Sizes','rinkSizesDropdownLabel');
            updateDropdownLabel('facilitiesOptions','All Facilities','facilitiesDropdownLabel');
            // Limpiar fechas
            document.getElementById('createdDateFrom').value = '';
            document.getElementById('createdDateTo').value = '';
            document.getElementById('happeningDateFrom').value = '';
            document.getElementById('happeningDateTo').value = '';
            document.getElementById('monthFilter').value = '';
            loadData();
        }

        // Export data
        function exportData() {
            if (!currentData) {
                alert('No data to export');
                return;
            }
            
            const labels = Object.keys(currentData);
            const values = Object.values(currentData);
            const totalBookings = values.reduce((sum, val) => sum + val, 0);
            
            const csvContent = "data:text/csv;charset=utf-8," 
                + "Day of Week,Bookings Count,Percentage\n"
                + labels.map((label, index) => {
                    const percentage = ((values[index] / totalBookings) * 100).toFixed(1);
                    const dayName = dayNames[parseInt(label)] || label;
                    return `${dayName},${values[index]},${percentage}%`;
                }).join("\n");
            
            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "bookings_by_day.csv");
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // Utility functions
        function showLoading() {
            document.getElementById('loadingSpinner').classList.remove('d-none');
            document.getElementById('dataContainer').classList.add('d-none');
        }

        function hideLoading() {
            document.getElementById('loadingSpinner').classList.add('d-none');
        }

        function showError(message) {
            document.getElementById('errorText').textContent = message;
            document.getElementById('errorMessage').classList.remove('d-none');
        }

        function hideError() {
            document.getElementById('errorMessage').classList.add('d-none');
        }

        function updateLastUpdated() {
            document.getElementById('lastUpdated').textContent = new Date().toLocaleString();
        }

        function getSelectedDropdownValues(containerId) {
            const checkboxes = document.querySelectorAll(`#${containerId} input[type="checkbox"]:checked`);
            return Array.from(checkboxes).map(cb => cb.value);
        }
        function updateDropdownLabel(containerId, defaultLabel, labelId) {
            const container = document.getElementById(containerId);
            const selectedOptions = Array.from(container.querySelectorAll('input[type="checkbox"]:checked')).map(cb => cb.value);
            const labelText = selectedOptions.length > 0 ? selectedOptions.join(', ') : defaultLabel;
            document.getElementById(labelId).textContent = labelText;
        }
        function filterDropdownOptions(input, containerId) {
            const filter = input.value.toLowerCase();
            const options = document.querySelectorAll(`#${containerId} .form-check`);
            options.forEach(option => {
                const text = option.textContent.toLowerCase();
                option.style.display = text.includes(filter) ? 'block' : 'none';
            });
        }
        function addToHistory(filtersSummary, busiest, busiestPct, quietest, quietestPct, total) {
            const now = new Date().toLocaleString();
            queryHistory.unshift({
                date: now,
                filters: filtersSummary,
                busiest: `${busiest} (${busiestPct}%)`,
                quietest: `${quietest} (${quietestPct}%)`,
                total: total
            });
            renderHistory();
        }
        function renderHistory() {
            const tbody = document.getElementById('historyTableBody');
            tbody.innerHTML = '';
            queryHistory.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${item.date}</td>
                    <td>${item.filters}</td>
                    <td>${item.busiest}</td>
                    <td>${item.quietest}</td>
                    <td>${item.total}</td>
                `;
                tbody.appendChild(row);
            });
        }
        function clearHistory() {
            queryHistory = [];
            renderHistory();
        }
        function getFiltersSummary() {
            const sports = getSelectedDropdownValues('sportsOptions');
            const cities = getSelectedDropdownValues('citiesOptions');
            const rinkSizes = getSelectedDropdownValues('rinkSizesOptions');
            const facilities = getSelectedDropdownValues('facilitiesOptions');
            const month = document.getElementById('monthFilter')?.value;
            const createdDateFrom = document.getElementById('createdDateFrom').value;
            const createdDateTo = document.getElementById('createdDateTo').value;
            const happeningDateFrom = document.getElementById('happeningDateFrom').value;
            const happeningDateTo = document.getElementById('happeningDateTo').value;
            const parts = [];
            if (sports.length) parts.push(`Sport: ${sports.join(', ')}`);
            if (cities.length) parts.push(`City: ${cities.join(', ')}`);
            if (rinkSizes.length) parts.push(`Rink Size: ${rinkSizes.join(', ')}`);
            if (facilities.length) parts.push(`Facility: ${facilities.join(', ')}`);
            if (month) parts.push(`Month: ${month}`);
            if (createdDateFrom) parts.push(`Created From: ${createdDateFrom}`);
            if (createdDateTo) parts.push(`Created To: ${createdDateTo}`);
            if (happeningDateFrom) parts.push(`Happening From: ${happeningDateFrom}`);
            if (happeningDateTo) parts.push(`Happening To: ${happeningDateTo}`);
            return parts.length ? parts.join(' | ') : 'All Data';
        }
    </script>
} 