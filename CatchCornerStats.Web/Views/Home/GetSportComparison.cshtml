@{
    ViewData["Title"] = "Sport Comparison";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                <div>
                    <h1 class="h2 mb-1 fw-bold text-info">
                        <i class="bi bi-bar-chart-steps me-2"></i>Sport Comparison
                    </h1>
                    <p class="text-muted mb-0">Comprehensive comparison of booking statistics across different sports.</p>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-outline-primary shadow-sm" onclick="exportData()">
                        <i class="bi bi-download me-2"></i>Export
                    </button>
                    <button class="btn btn-primary shadow-sm" onclick="loadData()">
                        <i class="bi bi-arrow-clockwise me-2"></i>Refresh
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom-0">
                    <h5 class="card-title mb-0 text-secondary">
                        <i class="bi bi-funnel me-2"></i>Filters
                    </h5>
                </div>
                <div class="card-body pb-2">
                    <div class="row g-3 mb-3">
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Sports</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="sportsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="sportsDropdownLabel">All Sports</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="sportsDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'sportsOptions',type:'sports',labelId:'sportsDropdownLabel',defaultLabel:'All Sports'})">
                                    <div id="sportsOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Cities</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="citiesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="citiesDropdownLabel">All Cities</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="citiesDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'citiesOptions',type:'cities',labelId:'citiesDropdownLabel',defaultLabel:'All Cities'})">
                                    <div id="citiesOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Rink Sizes</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="rinkSizesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="rinkSizesDropdownLabel">All Sizes</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="rinkSizesDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'rinkSizesOptions',type:'rinkSizes',labelId:'rinkSizesDropdownLabel',defaultLabel:'All Sizes'})">
                                    <div id="rinkSizesOptions"></div>
                                </ul>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label fw-semibold">Facilities</label>
                            <div class="dropdown w-100">
                                <button class="btn btn-outline-secondary w-100 text-start dropdown-toggle" type="button" id="facilitiesDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span id="facilitiesDropdownLabel">All Facilities</span>
                                </button>
                                <ul class="dropdown-menu w-100 p-2" aria-labelledby="facilitiesDropdown" style="max-height: 300px; overflow-y: auto; z-index: 1051;">
                                    <input type="text" class="form-control mb-2" placeholder="Search..." oninput="if(SharedFilters && SharedFilters.isInitialized) simpleFilterDropdown({containerId:'facilitiesOptions',type:'facilities',labelId:'facilitiesDropdownLabel',defaultLabel:'All Facilities'})">
                                    <div id="facilitiesOptions"></div>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="row g-3 mb-3">
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">Date Range</label>
                            <select class="form-select" id="dateRangeFilter">
                                <option value="all">All Time</option>
                                <option value="last7days">Last 7 Days</option>
                                <option value="last30days">Last 30 Days</option>
                                <option value="last3months">Last 3 Months</option>
                                <option value="last6months">Last 6 Months</option>
                                <option value="lastyear">Last Year</option>
                                <option value="custom">Custom Range</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">Comparison Metric</label>
                            <select class="form-select" id="metricFilter">
                                <option value="bookings">Total Bookings</option>
                                <option value="revenue">Revenue</option>
                                <option value="leadtime">Average Lead Time</option>
                                <option value="duration">Average Duration</option>
                                <option value="utilization">Facility Utilization</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-semibold">Chart Type</label>
                            <select class="form-select" id="chartTypeFilter">
                                <option value="bar">Bar Chart</option>
                                <option value="pie">Pie Chart</option>
                                <option value="line">Line Chart</option>
                                <option value="doughnut">Doughnut Chart</option>
                            </select>
                        </div>
                    </div>
                    <div class="d-flex gap-2 mb-3">
                        <button class="btn btn-primary px-4 shadow-sm" onclick="applyFilters()">
                            <i class="bi bi-funnel me-2"></i>Apply Filters
                        </button>
                        <button class="btn btn-outline-secondary px-4 shadow-sm" onclick="clearFilters()">
                            <i class="bi bi-x-circle me-2"></i>Clear Filters
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Section -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-white border-bottom-0">
                    <h5 class="card-title mb-0 text-info">
                        <i class="bi bi-bar-chart me-2"></i>Sport Comparison Results
                    </h5>
                </div>
                <div class="card-body">
                    <div id="loadingSpinner" class="text-center d-none py-5">
                        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3 text-primary">Loading comparison data...</p>
                    </div>
                    <div id="errorMessage" class="alert alert-danger d-none" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <span id="errorText">An error occurred while loading data.</span>
                    </div>
                    <div id="dataContainer" class="d-none">
                        <!-- Summary Cards -->
                        <div class="row mb-4 g-3">
                            <div class="col-md-3">
                                <div class="card bg-gradient-info text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-collection-play display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="totalSports">0</h2>
                                        <p class="mb-0">Sports Analyzed</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-gradient-success text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-trophy display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="topSport">-</h2>
                                        <p class="mb-0">Top Performing Sport</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-gradient-primary text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-clipboard-data display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="totalBookings">0</h2>
                                        <p class="mb-0">Total Bookings</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card bg-gradient-warning text-white shadow-sm h-100">
                                    <div class="card-body text-center">
                                        <div class="mb-2">
                                            <i class="bi bi-cash-coin display-5"></i>
                                        </div>
                                        <h2 class="fw-bold mb-1" id="avgRevenue">$0</h2>
                                        <p class="mb-0">Average Revenue</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Chart Section -->
                        <div class="row mb-4 g-3">
                            <div class="col-12">
                                <div class="card border-0 bg-gradient-info text-white shadow-sm h-100">
                                    <div class="card-header bg-transparent border-bottom-0">
                                        <h6 class="fw-bold mb-3">
                                            <i class="bi bi-graph-up me-2"></i>Sport Comparison Chart
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="chart-container" style="height: 400px;">
                                            <canvas id="sportComparisonChart"></canvas>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Detailed Comparison Table -->
                        <div class="row mb-4 g-3">
                            <div class="col-12">
                                <div class="card border-0 shadow-sm">
                                    <div class="card-header bg-white border-bottom-0">
                                        <h6 class="fw-bold mb-3">
                                            <i class="bi bi-table me-2"></i>Detailed Comparison
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="table-responsive mb-2">
                                            <table class="table table-hover align-middle rounded shadow-sm">
                                                <thead class="table-light">
                                                    <tr>
                                                        <th>Sport</th>
                                                        <th>Total Bookings</th>
                                                        <th>Revenue</th>
                                                        <th>Avg Lead Time</th>
                                                        <th>Avg Duration</th>
                                                        <th>Utilization %</th>
                                                        <th>Trend</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="comparisonTableBody">
                                                    <!-- Data will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Insights Section -->
                        <div class="row mb-4 g-3">
                            <div class="col-12">
                                <div class="card border-0 shadow-sm">
                                    <div class="card-header bg-white border-bottom-0">
                                        <h6 class="fw-bold mb-3">
                                            <i class="bi bi-lightbulb me-2"></i>Key Insights
                                        </h6>
                                    </div>
                                    <div class="card-body">
                                        <div id="insightsContainer">
                                            <!-- Insights will be populated here -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- Query History Table -->
                        <div class="table-responsive mb-3">
                            <h6 class="fw-bold mt-4 mb-2">
                                <i class="bi bi-clock-history me-2"></i>Query History
                                <button class="btn btn-sm btn-outline-danger ms-2" onclick="clearHistory()" title="Clear History">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </h6>
                            <table class="table table-sm table-bordered align-middle" id="historyTable">
                                <thead class="table-light">
                                    <tr>
                                        <th>Date/Time</th>
                                        <th>Filters</th>
                                        <th>Top Sport</th>
                                        <th>Flagged Sports</th>
                                        <th>Total Bookings</th>
                                    </tr>
                                </thead>
                                <tbody id="historyTableBody">
                                    <!-- History rows go here -->
                                </tbody>
                            </table>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-3 small">
                            <div>
                                <span class="text-muted">Last updated: <span id="lastUpdated">Never</span></span>
                            </div>
                            <div>
                                <span class="text-muted">API Endpoint: <code>/api/Stats/GetSportComparison</code></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentData = null;
        let chart = null;
        let queryHistory = [];
        let filtersReady = false;

        // Inicializar filtros y vista
        document.addEventListener('DOMContentLoaded', initializeView);

        async function initializeView() {
            try {
                if (typeof initializeSharedFilters !== 'function') {
                    console.error('SharedFilters not available');
                    return;
                }
                await initializeSharedFilters();
                filtersReady = true;
                populateAllDropdowns();
                restoreFilterSelections();
                setupEventListeners();
                loadData();
            } catch (error) {
                console.error('Error initializing filters:', error);
            }
        }

        function populateAllDropdowns() {
            const mappings = [
                { containerId: 'sportsOptions', type: 'sports', labelId: 'sportsDropdownLabel', defaultLabel: 'All Sports' },
                { containerId: 'citiesOptions', type: 'cities', labelId: 'citiesDropdownLabel', defaultLabel: 'All Cities' },
                { containerId: 'rinkSizesOptions', type: 'rinkSizes', labelId: 'rinkSizesDropdownLabel', defaultLabel: 'All Sizes' },
                { containerId: 'facilitiesOptions', type: 'facilities', labelId: 'facilitiesDropdownLabel', defaultLabel: 'All Facilities' }
            ];
            mappings.forEach(mapping => {
                simpleFilterDropdown(mapping);
            });
        }

        function setupEventListeners() {
            document.getElementById('dateRangeFilter').addEventListener('change', function() {
                if (this.value === 'custom') {
                    alert('Custom date range feature coming soon!');
                    this.value = 'all';
                }
            });
            document.getElementById('metricFilter').addEventListener('change', function() {
                if (currentData) updateChart();
            });
            document.getElementById('chartTypeFilter').addEventListener('change', function() {
                if (currentData) updateChart();
            });
        }

        // Load data from API
        async function loadData() {
            showLoading();
            hideError();
            
            try {
                const response = await fetch('https://localhost:7254/api/Stats/GetSportComparison');
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                // Mapear los datos de la API a la estructura esperada
                const apiData = await response.json();
                currentData = mapSportComparisonApiData(apiData);
                displayData();
                updateLastUpdated();
                
            } catch (error) {
                console.error('Error loading sport comparison data:', error);
                showError('Failed to load sport comparison data: ' + error.message);
            } finally {
                hideLoading();
            }
        }

        // Mapea los datos de la API a la estructura esperada por el frontend
        function mapSportComparisonApiData(apiData) {
            return apiData.map(item => ({
                sport: item.sport,
                city: item.city,
                totalBookings: item.totalBookings,
                revenue: 0, // No existe en la API, se pone 0
                avgLeadTime: 0, // No existe en la API, se pone 0
                avgDuration: 0, // No existe en la API, se pone 0
                utilization: 0, // No existe en la API, se pone 0
                trend: 0, // No existe en la API, se pone 0
                isFlaggedTop6: item.isFlaggedTop6,
                isFlaggedTop8: item.isFlaggedTop8,
                isFlaggedHighBookings: item.isFlaggedHighBookings
            }));
        }

        // Display data
        function displayData() {
            if (!currentData || currentData.length === 0) {
                showError('No data available for sport comparison');
                return;
            }

            updateSummaryCards();
            updateComparisonTable();
            updateChart();
            generateInsights();
            
            // Calcular datos para historial
            const topSport = getTopSport(currentData);
            const flaggedCount = currentData.filter(item => item.isFlaggedTop6 || item.isFlaggedTop8 || item.isFlaggedHighBookings).length;
            const totalBookings = currentData.reduce((sum, item) => sum + (item.totalBookings || 0), 0);
            addToHistory(getFiltersSummary(), topSport, flaggedCount, totalBookings);
            
            document.getElementById('dataContainer').classList.remove('d-none');
        }

        // Update summary cards
        function updateSummaryCards() {
            const sports = [...new Set(currentData.map(item => item.sport))];
            const totalBookings = currentData.reduce((sum, item) => sum + (item.totalBookings || 0), 0);
            const avgRevenue = currentData.reduce((sum, item) => sum + (item.revenue || 0), 0) / currentData.length;
            
            // Find top performing sport
            const topSport = currentData.reduce((top, current) => 
                (current.totalBookings || 0) > (top.totalBookings || 0) ? current : top
            );

            document.getElementById('totalSports').textContent = sports.length;
            document.getElementById('topSport').textContent = topSport.sport || 'N/A';
            document.getElementById('totalBookings').textContent = totalBookings.toLocaleString();
            document.getElementById('avgRevenue').textContent = `$${avgRevenue.toFixed(2)}`;
        }

        // Update comparison table
        function updateComparisonTable() {
            const tbody = document.getElementById('comparisonTableBody');
            tbody.innerHTML = '';
            
            currentData.forEach(item => {
                const row = document.createElement('tr');
                const trend = getTrendIndicator(item.trend || 0);
                
                row.innerHTML = `
                    <td><strong>${item.sport || 'N/A'}</strong></td>
                    <td>${(item.totalBookings || 0).toLocaleString()}</td>
                    <td>$${(item.revenue || 0).toFixed(2)}</td>
                    <td>${(item.avgLeadTime || 0).toFixed(1)} days</td>
                    <td>${(item.avgDuration || 0).toFixed(1)} hours</td>
                    <td>${(item.utilization || 0).toFixed(1)}%</td>
                    <td>${trend}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" onclick="viewSportDetails('${item.sport || ''}')">
                            <i class="bi bi-eye"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-info" onclick="exportSportData('${item.sport || ''}')">
                            <i class="bi bi-download"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        // Update chart
        function updateChart() {
            if (chart) {
                chart.destroy();
            }

            const ctx = document.getElementById('sportComparisonChart').getContext('2d');
            const chartData = prepareChartData();

            chart = new Chart(ctx, {
                type: document.getElementById('chartTypeFilter').value,
                data: chartData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: `Sport Comparison - ${document.getElementById('metricFilter').value.charAt(0).toUpperCase() + document.getElementById('metricFilter').value.slice(1)}`
                        }
                    },
                    scales: document.getElementById('chartTypeFilter').value === 'bar' ? {
                        y: {
                            beginAtZero: true
                        }
                    } : undefined
                }
            });
        }

        // Prepare chart data
        function prepareChartData() {
            const labels = currentData.map(item => item.sport || 'Unknown');
            const values = currentData.map(item => {
                switch (document.getElementById('metricFilter').value) {
                    case 'bookings': return item.totalBookings || 0;
                    case 'revenue': return item.revenue || 0;
                    case 'leadtime': return item.avgLeadTime || 0;
                    case 'duration': return item.avgDuration || 0;
                    case 'utilization': return item.utilization || 0;
                    default: return item.totalBookings || 0;
                }
            });

            const colors = [
                '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', 
                '#9966FF', '#FF9F40', '#FF6384', '#C9CBCF'
            ];

            return {
                labels: labels,
                datasets: [{
                    label: document.getElementById('metricFilter').value.charAt(0).toUpperCase() + document.getElementById('metricFilter').value.slice(1),
                    data: values,
                    backgroundColor: colors.slice(0, labels.length),
                    borderColor: colors.slice(0, labels.length),
                    borderWidth: 2
                }]
            };
        }

        // Generate insights
        function generateInsights() {
            const insightsContainer = document.getElementById('insightsContainer');
            const insights = [];

            // Find top and bottom performers
            const sortedByBookings = [...currentData].sort((a, b) => (b.totalBookings || 0) - (a.totalBookings || 0));
            const topSport = sortedByBookings[0];
            const bottomSport = sortedByBookings[sortedByBookings.length - 1];

            insights.push(`
                <div class="alert alert-info">
                    <i class="bi bi-trophy me-2"></i>
                    <strong>Top Performer:</strong> ${topSport.sport} leads with ${topSport.totalBookings} bookings and $${topSport.revenue.toFixed(2)} revenue.
                </div>
            `);

            insights.push(`
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <strong>Growth Opportunity:</strong> ${bottomSport.sport} has the lowest bookings (${bottomSport.totalBookings}). Consider marketing campaigns to boost demand.
                </div>
            `);

            // Calculate average utilization
            const avgUtilization = currentData.reduce((sum, item) => sum + (item.utilization || 0), 0) / currentData.length;
            if (avgUtilization < 70) {
                insights.push(`
                    <div class="alert alert-warning">
                        <i class="bi bi-speedometer2 me-2"></i>
                        <strong>Utilization Alert:</strong> Average facility utilization is ${avgUtilization.toFixed(1)}%. Consider optimizing pricing or marketing strategies.
                    </div>
                `);
            }

            insightsContainer.innerHTML = insights.join('');
        }

        // Apply filters
        function applyFilters() {
            // Los filtros seleccionados ya están en SharedFilters.selections
            loadData();
        }

        function clearFilters() {
            clearAllFilters();
            loadData();
        }

        function getFiltersSummary() {
            const s = SharedFilters.selections;
            const parts = [];
            if (s.sports.length) parts.push(`Sport: ${s.sports.join(', ')}`);
            if (s.cities.length) parts.push(`City: ${s.cities.join(', ')}`);
            if (s.rinkSizes.length) parts.push(`Rink Size: ${s.rinkSizes.join(', ')}`);
            if (s.facilities.length) parts.push(`Facility: ${s.facilities.join(', ')}`);
            const dateRange = document.getElementById('dateRangeFilter')?.value;
            const metric = document.getElementById('metricFilter')?.value;
            const chartType = document.getElementById('chartTypeFilter')?.value;
            if (dateRange && dateRange !== 'all') parts.push(`Date: ${dateRange}`);
            if (metric && metric !== 'bookings') parts.push(`Metric: ${metric}`);
            if (chartType && chartType !== 'bar') parts.push(`Chart: ${chartType}`);
            return parts.length ? parts.join(' | ') : 'All Data';
        }

        // Export data
        function exportData() {
            if (!currentData || currentData.length === 0) {
                alert('No data to export');
                return;
            }
            
            const csvContent = "data:text/csv;charset=utf-8," 
                + "Sport,Total Bookings,Revenue,Avg Lead Time,Avg Duration,Utilization %\n"
                + currentData.map(item => 
                    `"${item.sport || ''}","${item.totalBookings || 0}","${item.revenue || 0}","${item.avgLeadTime || 0}","${item.avgDuration || 0}","${item.utilization || 0}"`
                ).join("\n");
            
            const encodedUri = encodeURI(csvContent);
            const link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "sport_comparison.csv");
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // View sport details
        function viewSportDetails(sport) {
            alert(`Detailed analysis for ${sport}\n\nThis would show comprehensive statistics and trends for this specific sport.`);
        }

        // Export sport data
        function exportSportData(sport) {
            const sportData = currentData.find(item => item.sport === sport);
            if (sportData) {
                const csvContent = "data:text/csv;charset=utf-8," 
                    + "Metric,Value\n"
                    + `"Sport","${sportData.sport}"\n`
                    + `"Total Bookings","${sportData.totalBookings || 0}"\n`
                    + `"Revenue","${sportData.revenue || 0}"\n`
                    + `"Average Lead Time","${sportData.avgLeadTime || 0}"\n`
                    + `"Average Duration","${sportData.avgDuration || 0}"\n`
                    + `"Utilization","${sportData.utilization || 0}"\n`;
                
                const encodedUri = encodeURI(csvContent);
                const link = document.createElement("a");
                link.setAttribute("href", encodedUri);
                link.setAttribute("download", `${sport}_data.csv`);
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        }

        // Get trend indicator
        function getTrendIndicator(trend) {
            if (trend > 0) {
                return '<span class="text-success"><i class="bi bi-arrow-up"></i> +' + trend.toFixed(1) + '%</span>';
            } else if (trend < 0) {
                return '<span class="text-danger"><i class="bi bi-arrow-down"></i> ' + trend.toFixed(1) + '%</span>';
            } else {
                return '<span class="text-muted"><i class="bi bi-dash"></i> 0%</span>';
            }
        }

        // Utility functions
        function showLoading() {
            document.getElementById('loadingSpinner').classList.remove('d-none');
            document.getElementById('dataContainer').classList.add('d-none');
        }

        function hideLoading() {
            document.getElementById('loadingSpinner').classList.add('d-none');
        }

        function showError(message) {
            document.getElementById('errorText').textContent = message;
            document.getElementById('errorMessage').classList.remove('d-none');
        }

        function hideError() {
            document.getElementById('errorMessage').classList.add('d-none');
        }

        function updateLastUpdated() {
            document.getElementById('lastUpdated').textContent = new Date().toLocaleString();
        }

        function addToHistory(filtersSummary, topSport, flaggedCount, totalBookings) {
            const now = new Date().toLocaleString();
            queryHistory.unshift({
                date: now,
                filters: filtersSummary,
                topSport: topSport,
                flaggedCount: flaggedCount,
                total: totalBookings
            });
            renderHistory();
        }

        function renderHistory() {
            const tbody = document.getElementById('historyTableBody');
            tbody.innerHTML = '';
            queryHistory.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${item.date}</td>
                    <td>${item.filters}</td>
                    <td>${item.topSport}</td>
                    <td>${item.flaggedCount}</td>
                    <td>${item.total}</td>
                `;
                tbody.appendChild(row);
            });
        }

        function clearHistory() {
            queryHistory = [];
            renderHistory();
        }

        function getTopSport(data) {
            if (!data || !data.length) return '-';
            const top = data.reduce((prev, curr) => (curr.totalBookings > (prev.totalBookings || 0) ? curr : prev), {});
            return top.sport ? `${top.sport} (${top.totalBookings})` : '-';
        }
    </script>
} 